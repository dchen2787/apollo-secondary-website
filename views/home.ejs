<%- include("./partials/header"); -%>

<style>
  .page-hero { 
    display:flex; align-items:center; gap:14px; 
    margin:18px 0 20px; 
    padding-bottom:16px; 
    border-bottom:1px solid #e5e7eb;
  }
  .avatar { width:44px;height:44px;border-radius:50%;display:flex;align-items:center;justify-content:center;background:#eef4ff;color:#3353d1;font-weight:700; }
  .badge-soft { background:#dbeafe; color:#1e3a8a; border-radius:999px; padding:4px 12px; font-size:14px; font-weight:600; display:inline-block; }
  .pill-nonpcp { display:inline-block; padding:2px 10px; border-radius:999px; font-size:12px; background:#fef3c7; color:#92400e; }
  .slot-card { border-radius:18px; padding:14px; background:#fff; margin-bottom:12px; box-shadow:0 4px 12px rgba(0,0,0,.07); }
  .slot-card .head { display:flex; gap:8px; align-items:center; flex-wrap:wrap; }
  .muted { color:#6b7280; }

  .btn-soft { background:#111827; color:#fff; border:none; border-radius:12px; padding:8px 14px; }
  .btn-soft[disabled] { opacity:.55; cursor:not-allowed; }
  .btn-ghost { background:#f3f4f6; border:none; border-radius:12px; padding:8px 14px; }

  /* Alerts */
  .alert { position:relative; border-radius:14px; padding:10px 40px 10px 12px; margin:8px 0; }
  .alert-info { background:#eff6ff; color:#1d4ed8; }
  .alert-success { background:#ecfdf5; color:#065f46; }
  .alert-warning { background:#fff7ed; color:#9a3412; }
  .alert .close { position:absolute; right:10px; top:8px; background:transparent; border:0; font-size:20px; line-height:1; color:inherit; opacity:.6; }

  /* Phase banner */
  .phase-banner { border-radius:16px; padding:14px 16px; border:1px solid #dbeafe; background:#eff6ff; color:#1e3a8a; margin:12px 0; }
  .phase-banner.p0 { background:#f3f4f6; border-color:#e5e7eb; color:#111827; }
  .phase-banner.p1 { background:#fff1f2; border-color:#fecaca; color:#991b1b; }
  .phase-banner p { margin:0; }

  /* Locked banner */
  .lock-banner-wrap { margin:18px 0; }
  .lock-banner { border-radius:16px; padding:14px 16px; background:#fff7ed; color:#9a3412; border:1px solid #fcd49b; }

  .section-divider { height: 36px; }
  .section-block {
    background: #ffffff;
    border: 1px solid #e5e7eb;
    border-radius: 18px;
    padding: 20px;
    box-shadow: 0 8px 24px rgba(0, 0, 0, .05);
    margin-bottom: 32px;
  }
  .section-block.browse { background: #f9fafc; }
  .section-title {
    margin-top: 0;
    margin-bottom: 12px;
    font-size: 1.5rem;
    font-weight: 600;
    border-bottom: 1px solid #e5e7eb;
    padding-bottom: 6px;
  }

  /* Filters */
  .filter-card { background:#ffffff; border:1px solid #e5e7eb; border-radius:16px; padding:16px; box-shadow:0 6px 16px rgba(0,0,0,.05); margin:14px 0 18px; }
  .controls { display:grid; grid-template-columns: minmax(320px, 560px) minmax(240px, 320px) auto; gap:14px; align-items:center; }
  .searchbar-wrap { position:relative; display:flex; align-items:center; gap:10px; background:#f9fafb; border:1px solid #e5e7eb; border-radius:14px; padding:10px 12px; }
  .searchbar { flex:1; border:0; background:transparent; outline:none; padding:6px 2px; font-size:16px; }
  .dropdown { position:relative; width:100%; }
  .dropdown-toggle { width:100%; text-align:left; background:#f9fafb; border:1px solid #e5e7eb; border-radius:12px; padding:10px 14px; }
  .dropdown-menu { width:100%; max-height:260px; overflow:auto; border-radius:12px; border:1px solid #e5e7eb; box-shadow:0 8px 24px rgba(0,0,0,.1); }
  label.checkbox { display:flex; align-items:center; gap:8px; }
</style>

<div class="container">

  <% 
    const matchingLocked = !!(controls && controls.matchingLocked);
    const pcpOnlyFlag   = !!(controls && controls.PCPonly);
    const maxAllowed    = (typeof maxSlots === 'number' ? maxSlots : 9999);
    const userEmailLC = ((user && user.email) || "").toLowerCase();
    const mySlotsAll  = (slots || []).filter(s => ((s.studentEmail || "").toLowerCase() === userEmailLC));
    const currentCount  = mySlotsAll.length;
    let phase = 3, phaseNameLabel = "Phase 3: Unlimited";
    if (matchingLocked) { phase = 0; phaseNameLabel = "Phase 0: View Only"; }
    else if (pcpOnlyFlag) { phase = 1; phaseNameLabel = "Phase 1: PCP Only"; }
    else if (maxAllowed === 2) { phase = 2; phaseNameLabel = "Phase 2: Two-slot Limit"; }
  %>

  <% if (!matchingLocked) { %>
    <div class="phase-banner p<%= phase %>">
      <strong><%= phaseNameLabel %></strong>
      <p style="margin-top:4px;">
        <% if (phase === 0) { %>View-only: you can browse slots but cannot claim yet.
        <% } else if (phase === 1) { %>PCP-only: you may claim <strong>Primary Care</strong> slots only.
        <% } else if (phase === 2) { %>You may claim up to <strong>2</strong> slots total this phase.
        <% } else { %>You may claim an <strong>unlimited</strong> number of slots.<% } %>
      </p>
    </div>
  <% } %>

  <% if (matchingLocked) { %>
    <div class="lock-banner-wrap">
      <div class="lock-banner">
        Matching is currently locked. You can review your matches but cannot add new ones.
        Contact apolloyimde@gmail.com for assistance.
      </div>
    </div>
  <% } %>

  <% if (errM && errM.length) { %>
    <% const successPhrases = ["successfully matched", "successfully removed", "successfully confirmed"]; %>
    <% const isSuccess = successPhrases.some(p => errM.toLowerCase().includes(p)); %>
    <div class="alert <%= isSuccess ? 'alert-success alert-sticky' : 'alert-info' %>">
      <%= errM %>
      <% if (!isSuccess) { %><button type="button" class="close" aria-label="Close">&times;</button><% } %>
    </div>
  <% } %>

  <!-- Hero -->
  <div class="page-hero">
    <div class="avatar">
      <% const initials = (user?.fName?.[0] || '') + (user?.lName?.[0] || ''); %>
      <%= initials.toUpperCase() || "U" %>
    </div>
    <div>
      <div class="muted" style="font-size:14px;">Welcome</div>
      <h1 style="margin:0;"><%= user && user.fName ? user.fName : (user?.email || "Student") %></h1>
    </div>
    <div style="margin-left:auto;">
      <% if (matchingLocked && !confirmed) { %>
        <form action="/confirm" method="post"
              onsubmit="return confirm('Once you confirm, you can’t remove slots. Continue?')">
          <input type="hidden" name="userEmail" value="<%= user.email %>">
          <button class="btn-soft" type="submit">Confirm my slots</button>
        </form>
      <% } else if (confirmed) { %>
        <div class="muted" style="margin-top:8px;">You’ve confirmed your slots.</div>
      <% } %>
    </div>



  <!-- Your Matches -->
  <div class="section-block your">
    <h2 class="section-title">Your Matches</h2>
    <% if (mySlotsAll.length === 0) { %>
      <div class="muted">You haven’t claimed any slots yet.</div>
    <% } %>
    <% mySlotsAll.forEach(function(slot){ 
         const isPCP = ['Family Medicine (PCP)','Primary Care'].includes((slot.physSpecialty||'').trim());
    %>
      <div class="slot-card">
        <div class="head">
          <strong><%= slot.physName || '—' %></strong>
          <% if (slot.physSpecialty) { %><span class="badge-soft"><%= slot.physSpecialty %></span><% } %>
          <% if (phase === 1 && slot.physSpecialty && !isPCP) { %><span class="pill-nonpcp">Non-PCP</span><% } %>
        </div>
        <div class="muted" style="margin:6px 0;">
          <strong><%= slot.dDate || '-' %></strong> • <%= slot.timeStart || '-' %> to <%= slot.timeEnd || '-' %> • <%= slot.location || '-' %>
        </div>
        <div class="muted"><%= (slot.notes && slot.notes.trim()) ? slot.notes : '—' %></div>
        <% if (!confirmed) { 
             const confirmMsg = (phase >= 2) ? "Are you sure you want to remove this slot?" : "Remove this slot?";
        %>
          <form action="/unclaim" method="post" onsubmit="return confirm('<%= confirmMsg %>')">
            <input type="hidden" name="slotId" value="<%= slot._id %>">
            <input type="hidden" name="userEmail" value="<%= user.email %>">
            <button class="btn-ghost" type="submit">Remove</button>
          </form>
        <% } %>
      </div>
    <% }); %>
  </div>

  <% if (!matchingLocked) { %>
    <div class="section-divider"></div>

    <!-- Browse Slots -->
    <div class="section-block browse">
      <h2 class="section-title">Browse Slots</h2>

      <% const specsSet = new Set((slots || []).map(s => (s.physSpecialty || '').trim()).filter(Boolean));
         const specialties = Array.from(specsSet).sort();
      %>

      <div class="filter-card">
        <div class="controls">
          <div class="searchbar-wrap">
            <input id="search" class="searchbar" placeholder="Search by physician, specialty, location, or notes…">
          </div>

          <div class="dropdown" id="specDropdownWrap">
            <button class="dropdown-toggle" type="button" id="specDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
              Specialties (multi-select)
            </button>
            <div class="dropdown-menu p-2" aria-labelledby="specDropdown">
              <label class="dropdown-item"><input type="checkbox" id="specAll" checked> <strong>All specialties</strong></label>
              <div class="dropdown-divider"></div>
              <% specialties.forEach(function(sp){ %>
                <label class="dropdown-item"><input type="checkbox" class="spec-option" value="<%= sp %>"> <%= sp %></label>
              <% }); %>
            </div>
            <div class="muted" id="specHint" style="margin-top:6px;">All specialties selected</div>
          </div>

          <label class="checkbox">
            <input id="onlyOpen" type="checkbox" checked>
            <span>Only show not claimed</span>
          </label>
        </div>
      </div>

      <div id="slotList">
        <% (slots || []).forEach(function(slot){
             const isPCP2 = ['Family Medicine (PCP)','Primary Care'].includes((slot.physSpecialty||'').trim());
             let claimDisabledReason = null;
             if (phase === 0) claimDisabledReason = "View-only phase";
             else if (phase === 1 && !isPCP2) claimDisabledReason = "PCP-only active";
             else if (phase === 2 && (currentCount >= 2)) claimDisabledReason = "Limit of 2 reached";
             const studentEmailLC = (slot.studentEmail || "").toLowerCase();
             const claimedState = slot.studentEmail
              ? (studentEmailLC === userEmailLC ? "me" : "other")
                : "no";
        %>
          <div class="slot-card searchable"
               data-search="<%= [slot.physName, slot.physSpecialty, slot.location, slot.notes].filter(Boolean).join(' ').toLowerCase() %>"
               data-spec="<%= (slot.physSpecialty||'').trim() %>"
               data-claimed="<%= claimedState %>">
            <div class="head">
              <strong><%= slot.physName || '—' %></strong>
              <% if (slot.physSpecialty) { %><span class="badge-soft"><%= slot.physSpecialty %></span><% } %>
              <% if (phase === 1 && slot.physSpecialty && !isPCP2) { %><span class="pill-nonpcp">Non-PCP</span><% } %>
            </div>
            <div class="muted" style="margin:6px 0;">
              <strong><%= slot.dDate || '-' %></strong> • <%= slot.timeStart || '-' %> to <%= slot.timeEnd || '-' %> • <%= slot.location || '-' %>
            </div>
            <div class="muted"><%= (slot.notes && slot.notes.trim()) ? slot.notes : '—' %></div>
            <div style="margin-top:10px;">
              <% if (!slot.studentEmail) { %>
                <form action="/claim" method="post" style="display:inline;">
                  <input type="hidden" name="userEmail" value="<%= user.email %>">
                  <input type="hidden" name="userFName" value="<%= user.fName %>">
                  <input type="hidden" name="userLName" value="<%= user.lName %>">
                  <input type="hidden" name="slotId" value="<%= slot._id %>">
                  <button type="submit" class="btn-soft" <% if (claimDisabledReason) { %> disabled title="<%= claimDisabledReason %>" <% } %>>
                    Claim
                  </button>
                </form>
                <% if (claimDisabledReason) { %><span class="muted" style="margin-left:8px;"><%= claimDisabledReason %></span><% } %>
              <% } else { %>
                <% if (slot.studentEmail === (user && user.email)) { %>
                  <form action="/unclaim" method="post" style="display:inline;"
                        onsubmit="return confirm('Remove this slot?')">
                    <input type="hidden" name="userEmail" value="<%= user.email %>">
                    <input type="hidden" name="slotId" value="<%= slot._id %>">
                    <button type="submit" class="btn-ghost">Remove</button>
                  </form>
                  <span class="muted" style="margin-left:8px;">Claimed by you</span>
                <% } else { %>
                  <span class="muted">Taken</span>
                <% } %>
              <% } %>
            </div>
          </div>
        <% }); %>
      </div>
    </div>
  <% } %>
</div>

<script>
  (function(){
    const q = document.getElementById('search');
    const onlyOpen = document.getElementById('onlyOpen');
    const cards = Array.from(document.querySelectorAll('#slotList .slot-card'));
    const specAll = document.getElementById('specAll');
    const specChecks = Array.from(document.querySelectorAll('.spec-option'));
    const specHint = document.getElementById('specHint');

    function selectedSpecs(){ return specChecks.filter(c => c.checked).map(c => c.value); }
    function updateSpecHint(){
      const picked = specChecks.filter(c => c.checked).length;
      if (!specAll) return;
      if (specAll.checked || picked === 0 || picked === specChecks.length) {
        specHint.textContent = 'All specialties selected';
      } else {
        specHint.textContent = picked + ' specialty(ies) selected';
      }
    }
    function matches(card){
      const query = (q?.value || '').toLowerCase().trim();
      if (query && !(card.dataset.search || '').includes(query)) return false;
      const chosen = specAll?.checked ? [] : selectedSpecs();
      if (chosen.length && !chosen.includes(card.dataset.spec || '')) return false
