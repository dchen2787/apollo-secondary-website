<%- include("./partials/header"); -%>

<style>
  .page-hero { 
    display:flex; align-items:center; gap:14px; 
    margin:18px 0 20px; 
    padding-bottom:16px; 
    border-bottom:1px solid #e5e7eb;
  }
  .avatar { width:44px;height:44px;border-radius:50%;display:flex;align-items:center;justify-content:center;background:#eef4ff;color:#3353d1;font-weight:700; }
  .badge-soft { background:#dbeafe; color:#1e3a8a; border-radius:999px; padding:4px 12px; font-size:14px; font-weight:600; display:inline-block; }
  .pill-nonpcp { display:inline-block; padding:2px 10px; border-radius:999px; font-size:12px; background:#fef3c7; color:#92400e; }
  .slot-card { border-radius:18px; padding:14px; background:#fff; margin-bottom:12px; box-shadow:0 4px 12px rgba(0,0,0,.07); }
  .slot-card .head { display:flex; gap:8px; align-items:center; flex-wrap:wrap; }
  .muted { color:#6b7280; }
  .btn-soft { background:#111827; color:#fff; border:none; border-radius:12px; padding:8px 14px; }
  .btn-soft[disabled] { opacity:.55; cursor:not-allowed; }
  .btn-ghost { background:#f3f4f6; border:none; border-radius:12px; padding:8px 14px; }

  /* Alerts */
  .alert { position:relative; border-radius:14px; padding:10px 40px 10px 12px; margin:8px 0; }
  .alert-info { background:#eff6ff; color:#1d4ed8; }
  .alert-success { background:#ecfdf5; color:#065f46; }
  .alert-warning { background:#fff7ed; color:#9a3412; }
  .alert .close { position:absolute; right:10px; top:8px; background:transparent; border:0; font-size:20px; line-height:1; color:inherit; opacity:.6; }

  /* Locked banner (permanent) */
  .lock-banner-wrap { margin:18px 0; }
  .lock-banner { border-radius:16px; padding:14px 16px; background:#fff7ed; color:#9a3412; border:1px solid #fcd49b; }

  /* Filter panel */
  .filter-card { background:#ffffff; border:1px solid #e5e7eb; box-shadow:0 8px 24px rgba(0,0,0,.06); border-radius:16px; padding:16px; margin:14px 0 18px; }
  .filter-head { font-weight:600; color:#374151; margin-bottom:10px; }
  /* Center + align everything on the same baseline */
  .controls {
    display:grid;
    grid-template-columns: minmax(280px, 520px) minmax(240px, 320px) auto;
    gap:16px;
    justify-content:center;
    align-items:center;
  }
  .searchbar { border-radius:12px; border:1px solid #e5e7eb; padding:10px 12px; width:100%; }
  .dropdown { width:100%; }
  .dropdown .dropdown-toggle { 
    width:100%; 
    border-radius:12px; padding:10px 14px; 
    border:1px solid #e5e7eb; background:#f9fafb; 
    text-align:left;
  }
  .dropdown .dropdown-menu { 
    max-height:260px; overflow:auto; 
    z-index: 1060; /* ensure above cards */
    width:100%;
  }
  #specHint { text-align:center; width:100%; font-size:12px; margin-top:6px; }
  label.checkbox { display:flex; align-items:center; gap:8px; }

  /* Section spacing */
  .section-title { margin:20px 0 8px; }
</style>

<div class="container">

  <% /* --- MATCH LOCKED BANNER (permanent) --- */ %>
  <% if (controls && controls.matchingLocked) { %>
    <div class="lock-banner-wrap">
      <div class="lock-banner">
        Matching is currently locked. You can review your matches but cannot add new ones.
        Your matches are locked at this time. If you have any questions or concerns, please contact apolloyimde@gmail.com.
      </div>
    </div>
  <% } %>

  <% /* Other alerts (closable) */ %>
  <% if (errM && errM.length) { %>
    <div class="alert alert-info">
      <%= errM %>
      <button type="button" class="close" aria-label="Close">&times;</button>
    </div>
  <% } %>
  <% if (controls && controls.PCPonly) { %>
    <div class="alert alert-info">
      PCP‑only mode is ON. You can only claim primary‑care slots right now.
      <button type="button" class="close" aria-label="Close">&times;</button>
    </div>
  <% } %>

  <!-- Hero -->
  <div class="page-hero">
    <div class="avatar">
      <% const initials = (user?.fName?.[0] || '') + (user?.lName?.[0] || ''); %>
      <%= initials.toUpperCase() || "U" %>
    </div>
    <div>
      <div class="muted" style="font-size:14px;">Welcome</div>
      <h1 style="margin:0;"><%= user && user.fName ? user.fName : (user?.email || "Student") %></h1>
    </div>
    <div style="margin-left:auto;">
      <% if ((controls && controls.matchingLocked) && !confirmed) { %>
        <form action="/confirm" method="post">
          <input type="hidden" name="userEmail" value="<%= user.email %>">
          <button class="btn-soft">Confirm My Slots</button>
        </form>
      <% } %>
    </div>
  </div>

  <!-- Your matches -->
  <h2 class="section-title">Your Matches</h2>
  <%
    const mySlots = (slots || []).filter(s => s.studentEmail === user.email);
    if (mySlots.length === 0) { %>
      <div class="muted" style="margin-bottom:12px;">You haven’t claimed any slots yet.</div>
  <% } %>

  <% const PCPonly = !!(controls && controls.PCPonly); %>

  <% mySlots.forEach(function(slot){
       const isPCP = ['Family Medicine (PCP)','Primary Care'].includes((slot.physSpecialty||'').trim());
  %>
    <div class="slot-card">
      <div class="head">
        <strong><%= slot.physName || '—' %></strong>
        <% if (slot.physSpecialty) { %><span class="badge-soft"><%= slot.physSpecialty %></span><% } %>
        <% if (PCPonly && slot.physSpecialty && !isPCP) { %><span class="pill-nonpcp">Non‑PCP</span><% } %>
      </div>
      <div class="muted" style="margin:6px 0;">
        <strong><%= slot.dDate || '-' %></strong> • <%= (slot.timeStart || '-') %> to <%= (slot.timeEnd || '-') %> • <%= slot.location || '-' %>
      </div>
      <div class="muted"><%= (slot.notes && slot.notes.trim()) ? slot.notes : '—' %></div>

      <div style="margin-top:10px;">
        <% if (!(controls && controls.matchingLocked)) { %>
          <form action="/unclaim" method="post" style="display:inline;">
            <input type="hidden" name="userEmail" value="<%= user.email %>">
            <input type="hidden" name="slotId" value="<%= slot._id %>">
            <button type="submit" class="btn-ghost">Remove</button>
          </form>
        <% } %>
      </div>
    </div>
  <% }); %>

  <% /* --- CONFIRMED MESSAGE under matches (permanent, no close) --- */ %>
  <% if (confirmed) { %>
    <div class="alert alert-success" style="margin-top:10px;">
      You have confirmed your slots.
    </div>
  <% } %>

  <% /* Guidance only on locked/confirm state */ %>
  <% if (controls && controls.matchingLocked) { %>
    <hr />
    <p style="font-size:20px; line-height:1.35; margin:16px 0 8px;">
      To confirm that you are willing and able to attend all the slots above, press this button.
      Please remember to check date and location information carefully. If you are unable to attend any of the slots above
      or have any questions about your slots, instead contact the Apollo Team via email immediately.
    </p>
  <% } %>

  <% const matchingLocked = !!(controls && controls.matchingLocked); %>

  <!-- Browse with filters (hidden when locked) -->
  <% if (!matchingLocked) { %>
    <h2 class="section-title">Browse Slots</h2>

    <%
      const specsSet = new Set((slots || []).map(s => (s.physSpecialty || '').trim()).filter(Boolean));
      const specialties = Array.from(specsSet).sort();
    %>

    <div class="filter-card">
      <div class="filter-head">Search and filter</div>

      <div class="controls">
        <!-- Search -->
        <input id="search" class="searchbar" placeholder="Search by physician, specialty, location, or notes…">

        <!-- Multi-select dropdown (wider + centered + stays open) -->
        <div class="dropdown" id="specDropdownWrap">
          <button 
            class="dropdown-toggle" 
            type="button" 
            id="specDropdown" 
            data-toggle="dropdown" 
            aria-haspopup="true" 
            aria-expanded="false"
            role="button">
            Specialties (multi‑select)
          </button>
          <div class="dropdown-menu p-2" aria-labelledby="specDropdown">
            <label class="dropdown-item">
              <input type="checkbox" id="specAll" checked> <strong>All specialties</strong>
            </label>
            <div class="dropdown-divider"></div>
            <% specialties.forEach(function(sp){ %>
              <label class="dropdown-item">
                <input type="checkbox" class="spec-option" value="<%= sp %>"> <%= sp %>
              </label>
            <% }); %>
          </div>
          <div class="muted" id="specHint">All specialties selected</div>
        </div>

        <!-- Only open -->
        <label class="checkbox" style="justify-self:start;">
          <input id="onlyOpen" type="checkbox" checked>
          <span>Only show not claimed</span>
        </label>
      </div>
    </div>

    <div id="slotList">
      <% (slots || []).forEach(function(slot){
           const isPCP2 = ['Family Medicine (PCP)','Primary Care'].includes((slot.physSpecialty||'').trim());
           const claimDisabledReason = (controls && controls.PCPonly && !isPCP2) ? "PCP‑only is active." : null;
           const claimedState = slot.studentEmail ? (slot.studentEmail === user.email ? "me" : "other") : "no";
      %>
        <div class="slot-card searchable"
             data-search="<%= [slot.physName, slot.physSpecialty, slot.location, slot.notes].filter(Boolean).join(' ').toLowerCase() %>"
             data-spec="<%= (slot.physSpecialty||'').trim() %>"
             data-claimed="<%= claimedState %>">
          <div class="head">
            <strong><%= slot.physName || '—' %></strong>
            <% if (slot.physSpecialty) { %><span class="badge-soft"><%= slot.physSpecialty %></span><% } %>
            <% if ((controls && controls.PCPonly) && slot.physSpecialty && !isPCP2) { %><span class="pill-nonpcp">Non‑PCP</span><% } %>
          </div>

          <div class="muted" style="margin:6px 0;">
            <strong><%= slot.dDate || '-' %></strong> • <%= (slot.timeStart || '-') %> to <%= (slot.timeEnd || '-') %> • <%= slot.location || '-' %>
          </div>
          <div class="muted"><%= (slot.notes && slot.notes.trim()) ? slot.notes : '—' %></div>

          <div style="margin-top:10px;">
            <% if (!slot.studentEmail) { %>
              <form action="/claim" method="post" style="display:inline;">
                <input type="hidden" name="userEmail" value="<%= user.email %>">
                <input type="hidden" name="userFName" value="<%= user.fName %>">
                <input type="hidden" name="userLName" value="<%= user.lName %>">
                <input type="hidden" name="slotId" value="<%= slot._id %>">
                <button type="submit" class="btn-soft"
                  <% if (claimDisabledReason) { %> disabled title="<%= claimDisabledReason %>" <% } %>>
                  Claim
                </button>
              </form>
              <% if (claimDisabledReason) { %>
                <span class="muted" style="margin-left:8px;"><%= claimDisabledReason %></span>
              <% } %>
            <% } else { %>
              <% if (slot.studentEmail === user.email) { %>
                <form action="/unclaim" method="post" style="display:inline;">
                  <input type="hidden" name="userEmail" value="<%= user.email %>">
                  <input type="hidden" name="slotId" value="<%= slot._id %>">
                  <button type="submit" class="btn-ghost">Remove</button>
                </form>
                <span class="muted" style="margin-left:8px;">Claimed by you</span>
              <% } else { %>
                <span class="muted">Taken</span>
              <% } %>
            <% } %>
          </div>
        </div>
      <% }); %>
    </div>
  <% } %>

</div>

<script>
  // Dismiss closable alerts (not the locked banner or confirmed message)
  document.querySelectorAll('.alert .close').forEach(btn => {
    btn.addEventListener('click', () => btn.closest('.alert')?.remove());
  });

  (function(){
    const q = document.getElementById('search');
    const onlyOpen = document.getElementById('onlyOpen');
    const cards = Array.from(document.querySelectorAll('#slotList .slot-card'));

    // Keep dropdown open when clicking inside it
    document.querySelectorAll('.dropdown-menu').forEach(menu => {
      menu.addEventListener('click', e => e.stopPropagation());
    });

    const specAll = document.getElementById('specAll');
    const specChecks = Array.from(document.querySelectorAll('.spec-option'));
    const specHint = document.getElementById('specHint');

    function selectedSpecs(){ return specChecks.filter(c => c.checked).map(c => c.value); }
    function updateSpecHint(){
      const picked = specChecks.filter(c => c.checked).length;
      if (!specAll) return;
      if (specAll.checked || picked === 0 || picked === specChecks.length) {
        specHint.textContent = 'All specialties selected';
      } else {
        specHint.textContent = picked + ' specialty(ies) selected';
      }
    }
    function matches(card){
      const query = (q?.value || '').toLowerCase().trim();
      if (query && !(card.dataset.search || '').includes(query)) return false;
      const chosen = specAll?.checked ? [] : selectedSpecs();
      if (chosen.length && !chosen.includes(card.dataset.spec || '')) return false;
      const claimed = card.getAttribute('data-claimed');
      if (onlyOpen && onlyOpen.checked && claimed !== 'no') return false;
      return true;
    }
    function apply(){ cards.forEach(c => { c.style.display = matches(c) ? '' : 'none'; }); }

    q?.addEventListener('input', apply);
    onlyOpen?.addEventListener('change', apply);

    specAll?.addEventListener('change', () => {
      if (specAll.checked) specChecks.forEach(c => c.checked = false);
      updateSpecHint(); apply();
    });
    specChecks.forEach(c => c.addEventListener('change', () => {
      specAll.checked = !specChecks.some(x => x.checked);
      updateSpecHint(); apply();
    }));

    updateSpecHint(); apply();
  })();
</script>

<!-- Bootstrap (needed for dropdown) -->
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script>
  // Explicitly initialize dropdown to avoid flaky behavior
  $(function () {
    $('#specDropdown').dropdown();
  });
</script>

<%- include("./partials/footer"); -%>
